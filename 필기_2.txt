36. 흐림 효과

다른 많은 효과의 기본 효과. 
먼저 장면을 텍스처로 렌더링하고 그 텍스처에 흐리게 처리 한 다음
해당 텍스처를 다시 화면에 렌더링하여 수행. 텍스처로 렌더링 된
장면에서 2D 이미지 작업을 수행 할 때마다 이를 사후 처리라고 한다.
포스트 프로세싱을 수행하기 위해서는 일반적으로 비용이 많이 들고 쉐이더에서 무거운 최적화가 필요함

(Blur) 알고리즘

1. 장면을 텍스처로 렌더링 한다.

2. 텍스처의 크기를 절반 이하로 줄인다.

3. 다운 샘플링 된 텍스처에 수평 블러를 수행한다.

4. 수직 흐림을 수행한다.

5. 위로 샘플 텍스처를 원래의 화면 크기로 되돌린다.

6. 텍스처를 화면에 렌더링 한다.

37. 인스턴싱(Instancing)

때때로 그래픽 엔진은 위치, 배율, 색상 등의 약간의 변경만으로 정확히 동일한 개체(지오메트리)의 수많은 복사본을 렌더링해야 할 때가 
있다. 예를들어 입자, 나뭇잎 및 나무, 파티클 등 같은 형태의 물체를 여러개 렌더링 하고 싶은 경우 이들 나무나 나뭇잎 하나하나를 렌더링 하는것도 가능하지만 여러번의 DP Call은 퍼포먼스를 많이 잡아먹는 문제점을 야기한다.

인스턴싱은 Direct 11 에서 렌더링하는 방법으로 하나의 오브젝트에 대한 여러개의 인스턴스를 1번에 DP Call로 렌더링 하는 기술을 말한다.

1. 우선 모델 정점을 표현한다.

2. 모델에 대한 인스턴스 배열을 만들어 원하는 위치를 넣는다.

3. 배열을 바탕으로 인스턴스 버퍼를 설정하여 만든다.

4. Vertex Shader에서 원래의 Position에 Instance포지션을 += 하여 
   출력할 위치를 정해준 후, Pixel Shader로 넘긴다.

38. 하드웨어 테셀레이션

DirectX 11의 새로운 기능 중 하나. 

이전에 모델, 지형 등을 테셀레이션하려면 소프트웨어에서 폴리곤 메쉬의 세분화를 수행해야 한다. 하위 분할이 완료되면 생성한 다수의 다각형를 비디오 카드로 보낸다. 그러나 테셀레이션 방법은 비효율적이었으며 렌더링 성능 병목 현상을 야기 했다. 그러나 이제 DirectX 11 및 쉐이더 모델 5를 사용하여 기본 폴리곤 메쉬를 비디오 카드에 전송 한 다음 하드웨어에서 특정 하위 분할 알고리즘을 수행하도록 비디오 카드에 지시 할 수 있다. 새로운 프로그래밍 가능 선체 및 도메인 쉐이더를 사용하여 하위 프로그램의 프로그래밍을 완벽하게 제어 할 수 있다.

테셀레이이션 기존의 쉐이딩에서 Hull 쉐이더와 Domain 쉐이더가 추가된다. 주된 변화는 프로그래밍 가능한 버텍스 쉐이더가 세 부분으로 나뉘어져 있다는 점이다.이 세부분은 정점 셰이더, 선체 셰이더 및 도메인 셰이더이다. 테셀레이션은 선체와 도메인 쉐이더 사이에서 발생한다. 픽셀 셰이더는 변경점이 없다.

Vertex -> Hull -> Domain -> Pixel

39. 파티클 시스템

파티클은 대등 한 모양으로 만들어져 있다. 그리고 그것의 기본, 기본, 기본 및 기본 프레임을 사용하여 프레임을 모두 사용 할 수 있다. 표준 형태의 구성 요소가 있다. 이 플레이어는 하나의 코드를 사용하여 각 프레임의 빛을 사용한다. 또한 블렌드를 사용하여 레이어드하고 레이어드 된 파티클을 누적한다.

파티클 시스템의 확장

1. 작업이 완전 데이터 기반

2. 인스턴싱화

3. Z깊이가 아니라 카메라에서 파티클의 거리를 기준으로 정렬
   
4. 카메라를 마주 보도록 Y축을 중심으로 회전

5. 입자 배열을 보다 효율적으로 정렬 (stl의 사용)
   copy가 아닌 move를 써서.

40. 그림자 매핑

RTT, 반사, 깊이 버퍼 개념을 명확하게 알고 있어야 함.

그림자 매핑은 중소 씬에서 그림자를 렌더링하는 가장 빠른 방법이자
CPU / GPU 효율적인 방법 중 하나이다. 또한 매우 현실적인 결과를 제공하는 더 간당한 방법 중 하나이다. 

빛의 관점에서 장면을 렌더링 하기 때문에 빛의 위치는 매우 중요하다.
빛의 관점에서 렌더링 할 때 깊이 버퍼 정보를 텍스처 텐더링으로 렌더링 한다. 깊이 정보로 채워진 이 텍스처를 그림자 맵이라고 한다.

얻은 그림자 맵을 바탕으로 그림자가 어디 발생해야하는지를 파악할 수 있다. 장면을 렌더링 할 때 섀도우 맵 텍스처를 다시 씬에 투영하여 그림자를 투사하는 객체의 깊이를 얻고 픽셀 쉐이더에서 픽셀 단위로 빛의 위치와 비교한다. 빛이 카메라에 더 가깝다는 것을 알게 되면 픽셀을 비춘다. 객체가 카메라에 더 가깝다는 것을 알게되면 픽셀을 그림자 처리한다. 

1. 깊이 텍스쳐에 빛의 정보를 바탕으로 모델들의 깊이를 그린다.

2. 깊이 텍스쳐 정보를 바탕으로 쉐도우 쉐이더에서 그림자를 처리한다.
    빛의 깊이와 물체의 깊이를 비교하여(음영을 줄지, 조명을 줄지)


